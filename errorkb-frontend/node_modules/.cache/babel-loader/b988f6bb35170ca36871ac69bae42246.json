{"ast":null,"code":"import _objectSpread from \"D:\\\\Github\\\\Diplomarbeit\\\\errorkb-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Github\\\\Diplomarbeit\\\\errorkb-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Github\\\\Diplomarbeit\\\\errorkb-frontend\\\\src\\\\components\\\\usermanagement\\\\usertable.jsx\";\nimport React from 'react'; // import { forwardRef } from 'react';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn'; //\n// const tableIcons = {\n//     Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n//     Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n//     Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n//     Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n//     DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n//     Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n//     Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n//     Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n//     FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n//     LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n//     NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n//     PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n//     ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n//     Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n//     SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n//     ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n//     ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n// };\n\nexport default function MaterialTableDemo() {\n  const _React$useState = React.useState({\n    columns: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Surname',\n      field: 'surname'\n    }, {\n      title: 'Birth Year',\n      field: 'birthYear',\n      type: 'numeric'\n    }, {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: {\n        34: 'İstanbul',\n        63: 'Şanlıurfa'\n      }\n    }],\n    data: [{\n      name: 'Mehmet',\n      surname: 'Baran',\n      birthYear: 1987,\n      birthCity: 63\n    }, {\n      name: 'Zerya Betül',\n      surname: 'Baran',\n      birthYear: 2017,\n      birthCity: 34\n    }]\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  return React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data // icons={tableIcons}\n    ,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["D:/Github/Diplomarbeit/errorkb-frontend/src/components/usermanagement/usertable.jsx"],"names":["React","MaterialTable","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","MaterialTableDemo","useState","columns","title","field","type","lookup","data","name","surname","birthYear","birthCity","state","setState","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n//\r\n// const tableIcons = {\r\n//     Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n//     Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n//     Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n//     Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n//     DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n//     Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n//     Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n//     Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n//     FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n//     LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n//     NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n//     PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n//     ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n//     Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n//     SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n//     ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n//     ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n// };\r\n\r\n\r\n\r\nexport default function MaterialTableDemo() {\r\n    const [state, setState] = React.useState({\r\n        columns: [\r\n            { title: 'Name', field: 'name' },\r\n            { title: 'Surname', field: 'surname' },\r\n            { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n            {\r\n                title: 'Birth Place',\r\n                field: 'birthCity',\r\n                lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n            },\r\n        ],\r\n        data: [\r\n            { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\r\n            {\r\n                name: 'Zerya Betül',\r\n                surname: 'Baran',\r\n                birthYear: 2017,\r\n                birthCity: 34,\r\n            },\r\n        ],\r\n    });\r\n\r\n    return (\r\n        <MaterialTable\r\n            title=\"Editable Example\"\r\n            columns={state.columns}\r\n            data={state.data}\r\n            // icons={tableIcons}\r\n            editable={{\r\n                onRowAdd: newData =>\r\n                    new Promise(resolve => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState(prevState => {\r\n                                const data = [...prevState.data];\r\n                                data.push(newData);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise(resolve => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState(prevState => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: oldData =>\r\n                    new Promise(resolve => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState(prevState => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}