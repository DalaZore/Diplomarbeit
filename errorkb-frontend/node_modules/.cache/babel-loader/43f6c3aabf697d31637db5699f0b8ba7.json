{"ast":null,"code":"import _objectSpread from \"D:\\\\Github\\\\Diplomarbeit\\\\errorkb-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Github\\\\Diplomarbeit\\\\errorkb-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Github\\\\Diplomarbeit\\\\errorkb-frontend\\\\src\\\\components\\\\Dashboard.jsx\";\nimport React, { Component, useEffect } from 'react';\nimport '../App.css';\nimport { useCookies } from \"react-cookie\";\nimport { forwardRef } from 'react';\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 250\n    }\n  }\n}));\nconst tableIcons = {\n  Add: forwardRef((props, ref) => React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))),\n  Check: forwardRef((props, ref) => React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))),\n  Clear: forwardRef((props, ref) => React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))),\n  Delete: forwardRef((props, ref) => React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))),\n  DetailPanel: forwardRef((props, ref) => React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))),\n  Edit: forwardRef((props, ref) => React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))),\n  Export: forwardRef((props, ref) => React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))),\n  Filter: forwardRef((props, ref) => React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))),\n  FirstPage: forwardRef((props, ref) => React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))),\n  LastPage: forwardRef((props, ref) => React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))),\n  NextPage: forwardRef((props, ref) => React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))),\n  PreviousPage: forwardRef((props, ref) => React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))),\n  ResetSearch: forwardRef((props, ref) => React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))),\n  Search: forwardRef((props, ref) => React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))),\n  SortArrow: forwardRef((props, ref) => React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))),\n  ViewColumn: forwardRef((props, ref) => React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))\n};\n\nvar request = require('superagent');\n\nexport default function Dashboard() {\n  const _React$useState = React.useState({\n    columns: [{\n      title: 'ID',\n      field: 'id'\n    }, {\n      title: 'Status',\n      field: 'status'\n    }, {\n      title: 'Title',\n      field: 'title'\n    }, {\n      title: 'Description',\n      field: 'desc'\n    }, {\n      title: 'User',\n      field: 'user'\n    }, {\n      title: 'Solution',\n      field: 'Solution'\n    }],\n    data: []\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const getUsers = async () => {\n    const url = \"http://localhost/errorkb/api/GetAllEntries\";\n    const response = await fetch(url);\n    const entrydata = await response.json();\n\n    for (let i = 0; i < entrydata.length; i++) {\n      new Promise(resolve => {\n        {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push({\n              id: entrydata[i].username,\n              password: userdata[i].passwd,\n              priv: userdata[i].privileges\n            });\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }\n      });\n    }\n\n    console.log(\"test\");\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return React.createElement(MaterialTable, {\n    title: \"Entries\",\n    columns: state.columns,\n    data: state.data,\n    icons: tableIcons,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(async prevState => {\n            const data = [...prevState.data];\n            const url = \"http://localhost/errorkb/api/PostNewUser/?username=\" + newData.username + \"&password=\" + newData.password + \"&priv=\" + newData.priv;\n\n            try {\n              const response = await request('POST', url);\n\n              if (response.statusCode == 200) {\n                data.push(newData);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              }\n            } catch (error) {\n              alert(error.message);\n              return _objectSpread({}, prevState, {\n                data\n              });\n            } finally {\n              window.location.reload();\n            }\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            console.log(oldData.username);\n            console.log(newData);\n            setState(async prevState => {\n              const data = [...prevState.data];\n              const url = \"http://localhost/errorkb/api/PutNewUser/?oldUsername=\" + oldData.username + \"&oldPassword=\" + oldData.password + \"&newUsername=\" + newData.username + \"&newPassword=\" + newData.password + \"&newPriv=\" + newData.priv;\n\n              try {\n                const response = await request('PUT', url);\n\n                if (response.statusCode == 200) {\n                  data[data.indexOf(oldData)] = newData;\n                  return _objectSpread({}, prevState, {\n                    data\n                  });\n                }\n              } catch (error) {\n                alert(error.message);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              } finally {\n                window.location.reload();\n              }\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(async prevState => {\n            const data = [...prevState.data];\n            const url = \"http://localhost/errorkb/Api/DeleteUser?username=\" + oldData.username;\n\n            try {\n              const response = await request('DELETE', url);\n\n              if (response.statusCode == 200) {\n                data.splice(data.indexOf(oldData), 1);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              }\n            } catch (error) {\n              alert(error.message);\n              return _objectSpread({}, prevState, {\n                data\n              });\n            } finally {\n              window.location.reload();\n            }\n          });\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  });\n}\nconst style = {\n  margin: 15\n};","map":{"version":3,"sources":["D:/Github/Diplomarbeit/errorkb-frontend/src/components/Dashboard.jsx"],"names":["React","Component","useEffect","useCookies","forwardRef","MaterialTable","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","makeStyles","useStyles","theme","root","margin","spacing","width","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","request","require","Dashboard","useState","columns","title","field","data","state","setState","getUsers","url","response","fetch","entrydata","json","i","length","Promise","resolve","prevState","push","id","username","password","userdata","passwd","priv","privileges","console","log","onRowAdd","newData","setTimeout","statusCode","error","alert","message","window","location","reload","onRowUpdate","oldData","indexOf","onRowDelete","splice","style"],"mappings":"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","sourcesContent":["import React, {Component, useEffect} from 'react';\r\nimport '../App.css';\r\nimport {useCookies} from \"react-cookie\";\r\nimport { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 250,\r\n        },\r\n    },\r\n}));\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nvar request = require('superagent');\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [state, setState] = React.useState({\r\n        columns: [\r\n            { title: 'ID', field: 'id' },\r\n            { title: 'Status', field: 'status' },\r\n            { title: 'Title', field: 'title' },\r\n            { title: 'Description', field: 'desc' },\r\n            { title: 'User', field: 'user' },\r\n            { title: 'Solution', field: 'Solution' },\r\n        ],\r\n        data: [\r\n\r\n        ],\r\n    });\r\n\r\n    const getUsers = async() => {\r\n\r\n        const url = \"http://localhost/errorkb/api/GetAllEntries\";\r\n        const response = await fetch(url);\r\n        const entrydata = await response.json();\r\n        for(let i = 0 ; i < entrydata.length; i++){\r\n            new Promise(resolve => {\r\n                {resolve();\r\n                    setState(prevState => {\r\n                        const data = [...prevState.data];\r\n                        data.push({id:entrydata[i].username,password:userdata[i].passwd,priv:userdata[i].privileges});\r\n                        return { ...prevState, data };\r\n                    });\r\n                }\r\n            })\r\n        }\r\n        console.log(\"test\")\r\n    }\r\n    useEffect(()=>{\r\n        getUsers();\r\n    },[]);\r\n\r\n        return(\r\n            <MaterialTable\r\n                title=\"Entries\"\r\n                columns={state.columns}\r\n                data={state.data}\r\n                icons={tableIcons}\r\n                editable={{\r\n                    onRowAdd: newData =>\r\n                        new Promise(resolve => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                setState(async prevState => {\r\n                                    const data = [...prevState.data];\r\n                                    const url = \"http://localhost/errorkb/api/PostNewUser/?username=\"+newData.username+\"&password=\"+newData.password+\"&priv=\"+newData.priv;\r\n                                    try{\r\n                                        const response = await request('POST',url);\r\n                                        if(response.statusCode==200){\r\n                                            data.push(newData);\r\n                                            return { ...prevState, data };\r\n                                        }\r\n                                    }\r\n                                    catch(error){\r\n                                        alert(error.message)\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    finally{\r\n                                        window.location.reload();\r\n                                    }\r\n                                })\r\n                            }, 600);\r\n                        }),\r\n                    onRowUpdate:\r\n                        (newData, oldData) =>\r\n                            new Promise(resolve => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    if (oldData) {\r\n                                        console.log(oldData.username);\r\n                                        console.log(newData);\r\n                                        setState(async prevState => {\r\n                                            const data = [...prevState.data];\r\n                                            const url = \"http://localhost/errorkb/api/PutNewUser/?oldUsername=\"+ oldData.username+\"&oldPassword=\"+oldData.password+\"&newUsername=\"+newData.username+\"&newPassword=\"+newData.password+\"&newPriv=\"+newData.priv;\r\n                                            try{\r\n                                                const response = await request('PUT',url);\r\n                                                if(response.statusCode==200){\r\n                                                    data[data.indexOf(oldData)] = newData;\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                            }\r\n                                            catch(error){\r\n                                                alert(error.message)\r\n                                                return { ...prevState, data };\r\n                                            }\r\n                                            finally{\r\n                                                window.location.reload();\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                }, 600);\r\n                            }),\r\n                    onRowDelete: oldData =>\r\n                        new Promise(resolve => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                setState(async prevState => {\r\n                                    const data = [...prevState.data];\r\n                                    const url = \"http://localhost/errorkb/Api/DeleteUser?username=\"+oldData.username;\r\n                                    try{\r\n                                        const response = await request('DELETE',url);\r\n                                        if(response.statusCode==200){\r\n                                            data.splice(data.indexOf(oldData), 1);\r\n                                            return { ...prevState, data };\r\n                                        }\r\n                                    }\r\n                                    catch(error){\r\n                                        alert(error.message)\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    finally{\r\n                                        window.location.reload();\r\n                                    }\r\n                                });\r\n                            }, 600);\r\n                        }),\r\n                }}\r\n            />\r\n\r\n\r\n\r\n        );\r\n\r\n}\r\n\r\n\r\nconst style = {\r\n    margin: 15,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}