{"ast":null,"code":"import _slicedToArray from \"D:\\\\Github\\\\Diplomarbeit\\\\errorkb-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Github\\\\Diplomarbeit\\\\errorkb-frontend\\\\src\\\\components\\\\UserMgmt.jsx\";\nimport React, { Component, useEffect } from 'react';\nimport '../App.css';\nimport Dashboard from \"./Dashboard\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\"; // import AppBar from \"material-ui/AppBar\";\n\nimport AppBar from \"./AppBar\";\nimport { useCookies } from \"react-cookie\";\nimport { Redirect } from \"react-router\"; //var apiBaseUrl = \"http://localhost:4000/api/\";\n\n/*\r\nModule:superagent\r\nsuperagent is used to handle post/get requests to server\r\n*/\n\nvar request = require('superagent');\n\nconst _useCookies = useCookies(['user']),\n      _useCookies2 = _slicedToArray(_useCookies, 3),\n      cookies = _useCookies2[0],\n      setCookie = _useCookies2[1],\n      removeCookie = _useCookies2[2];\n\nconst _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoggedIn = _React$useState2[0],\n      setLoggedIn = _React$useState2[1];\n\nconst readCookieUser = () => {\n  const user = cookies.user;\n\n  if (user != null) {\n    setLoggedIn(true);\n  } else {\n    setLoggedIn(false);\n  }\n};\n\nclass UserMgmt extends Component {\n  componentWillMount() {\n    readCookieUser();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"test\"));\n  }\n\n}\n\nconst style = {\n  margin: 15\n};\nexport default UserMgmt;","map":{"version":3,"sources":["D:/Github/Diplomarbeit/errorkb-frontend/src/components/UserMgmt.jsx"],"names":["React","Component","useEffect","Dashboard","MuiThemeProvider","AppBar","useCookies","Redirect","request","require","cookies","setCookie","removeCookie","useState","isLoggedIn","setLoggedIn","readCookieUser","user","UserMgmt","componentWillMount","render","style","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,QAAR,QAAuB,cAAvB,C,CAGA;;AAIA;;;;;AAIA,IAAIC,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;;oBAC2CH,UAAU,CAAC,CAAC,MAAD,CAAD,C;;MAA9CI,O;MAASC,S;MAAWC,Y;;wBACMZ,KAAK,CAACa,QAAN,CAAe,KAAf,C;;MAA1BC,U;MAAWC,W;;AAClB,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,IAAI,GAAGP,OAAO,CAACO,IAArB;;AACA,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AACdF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD,MAGI;AACAA,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,CARD;;AAaA,MAAMG,QAAN,SAAuBjB,SAAvB,CAAiC;AAE7BkB,EAAAA,kBAAkB,GAAG;AACjBH,IAAAA,cAAc;AACjB;;AAIDI,EAAAA,MAAM,GAAG;AAKL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,CADJ;AAMH;;AAnB4B;;AAuBjC,MAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AADE,CAAd;AAIA,eAAgBJ,QAAhB","sourcesContent":["import React, {Component, useEffect} from 'react';\r\nimport '../App.css';\r\nimport Dashboard from \"./Dashboard\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\n// import AppBar from \"material-ui/AppBar\";\r\nimport AppBar from \"./AppBar\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\n//var apiBaseUrl = \"http://localhost:4000/api/\";\r\n\r\n\r\n\r\n/*\r\nModule:superagent\r\nsuperagent is used to handle post/get requests to server\r\n*/\r\nvar request = require('superagent');\r\nconst [cookies, setCookie, removeCookie] = useCookies(['user']);\r\nconst [isLoggedIn,setLoggedIn] = React.useState(false);\r\nconst readCookieUser = () => {\r\n    const user = cookies.user\r\n    if (user != null) {\r\n        setLoggedIn(true);\r\n    }\r\n    else{\r\n        setLoggedIn(false);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nclass UserMgmt extends Component {\r\n\r\n    componentWillMount() {\r\n        readCookieUser();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n        return(\r\n            <div>\r\n\r\n            <p>test</p>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\n\r\nconst style = {\r\n    margin: 15,\r\n};\r\n\r\nexport default  UserMgmt;\r\n"]},"metadata":{},"sourceType":"module"}