{"version":3,"sources":["components/auth/AuthApi.jsx","components/auth/login.jsx","components/Dashboard.jsx","components/UserMgmt.jsx","components/AppBar.jsx","App.js","serviceWorker.js","index.js"],"names":["AuthApi","React","createContext","useStyles","makeStyles","theme","root","margin","spacing","width","Login","useCookies","setCookie","pathStart","window","location","protocol","host","useState","username","setUsername","password","setPassword","Auth","useContext","classes","className","noValidate","autoComplete","style","display","alignItems","justifyContent","marginTop","Grid","container","item","xs","sm","TextField","id","label","type","value","onChange","e","target","paddingTop","paddingLeft","Button","onClick","a","async","url","fetch","response","console","log","json","data","status","setAuth","privileges","alert","variant","color","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","request","require","Dashboard","cookies","columns","title","field","editable","lookup","open","closed","product","process","state","setState","useEffect","entrydata","i","Promise","resolve","prevState","push","category","catdesc","desc","description","slice","user","date","timestamp","solution","length","getEntries","icons","detailPanel","tooltip","render","rowData","fontSize","textAlign","onRowAdd","newData","setTimeout","message","reload","onRowUpdate","oldData","indexOf","onRowDelete","rights","splice","UserMgmt","setLoggedIn","admin","userdata","priv","getUsers","statusCode","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","textDecoration","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","content","flexGrow","contentShift","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","breakpoints","up","searchIcon","height","pointerEvents","inputRoot","inputInput","PersistentDrawerLeft","useTheme","setOpen","removeCookie","isAdm","setAdm","isLoggedIn","readCookieRights","readCookieUser","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Drawer","anchor","paper","direction","Divider","ListItem","button","key","ListItemIcon","ListItemText","primary","List","Routes","path","exact","auth","component","ProtectedRoute","Component","rest","to","ProtectedLogin","Boolean","hostname","match","ReactDOM","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fd81b74.chunk.js","sourcesContent":["import React from 'react';\r\nconst AuthApi = React.createContext();\r\nexport default AuthApi;","import React, {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AuthApi from \"./AuthApi\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 250,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Login() {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['user']);\r\n    const pathStart = window.location.protocol + \"//\" + window.location.host;\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const Auth = React.useContext(AuthApi);\r\n\r\n\r\n    const handleOnClick = async () => {\r\n        if(password==null){\r\n            setPassword(\"\");\r\n        }\r\n        if(username==null){\r\n            setUsername(\"\");\r\n        }\r\n        const url = pathStart + \":8080/errorkb/api/GetUser/?username=\" + username+\"&password=\"+password;\r\n        const response = await fetch(url);\r\n        console.log(url);\r\n        try{\r\n            const data = await response.json();\r\n            if(response.status==200){\r\n                Auth.setAuth(true);\r\n                setCookie(\"user\", data[0].username);\r\n                setCookie(\"rights\", data[0].privileges);\r\n            }\r\n        }\r\n        catch{\r\n            alert(\"wrong credentials\");\r\n        }\r\n        finally{\r\n\r\n        }\r\n\r\n        console.log(response);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n        const classes = useStyles();\r\n\r\n        return (\r\n\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n                <div style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    marginTop: '100px',\r\n                }}>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={5} sm={5}/>\r\n                        <Grid item xs={9} sm={5}>\r\n                            <TextField\r\n                                id=\"standard-username-input\"\r\n                                label=\"Username\"\r\n                                type=\"text\"\r\n                                autoComplete=\"current-username\"\r\n                                value={username}\r\n                                onChange={\r\n                                    (e) => {\r\n                                        setUsername(e.target.value);\r\n                                    }}\r\n                            />\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </div>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={5} sm={5}/>\r\n                        <Grid item xs={9} sm={5}>\r\n                            <TextField\r\n                                id=\"standard-password-input\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                value={password}\r\n                                onChange={\r\n                                    (e) => {\r\n                                        setPassword(e.target.value)\r\n                                    }}\r\n                            />\r\n                            <Grid item xs={5}/>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </div>\r\n\r\n                <div style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    paddingTop: '10px',\r\n                    paddingLeft: '10px',\r\n                }}>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={5} sm={5}/>\r\n\r\n                        <Grid item xs={8} sm={6}>\r\n                            <Button onClick={handleOnClick} className={classes.root} style={{width: '255px'}}\r\n                                    variant=\"outlined\" color=\"Primary\">\r\n                                Login\r\n                            </Button>\r\n                            <Grid item xs={5}/>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n","import React, {Component, useEffect} from 'react';\r\nimport '../App.css';\r\nimport {useCookies} from \"react-cookie\";\r\nimport { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 250,\r\n        },\r\n    },\r\n}));\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nvar request = require('superagent');\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies(['rights']);\r\n    const pathStart = window.location.protocol + \"//\" + window.location.host;\r\n    const [state, setState] = React.useState({\r\n        columns: [\r\n            { title: 'ID', field: 'id' ,editable:'never'},\r\n            { title: 'Status', field: 'status',lookup:{open:'open',closed:'closed'} },\r\n            { title: 'Category', field: 'category',lookup:{product:'product',process:'process'} },\r\n            { title: 'Category Description', field: 'catdesc' },\r\n            { title: 'Title', field: 'title' },\r\n            { title: 'Description', field: 'desc' },\r\n            { title: 'Assigned user', field: 'user' },\r\n            { title: 'Creation date', field: 'date',editable:\"never\" ,type:'datetime'},\r\n            { title: 'Solution', field: 'solution' },\r\n        ],\r\n        data: [\r\n\r\n        ],\r\n    });\r\n\r\n    const getEntries = async() => {\r\n\r\n        const url = pathStart + \":8080/errorkb/api/GetAllEntries\";\r\n        const response = await fetch(url);\r\n        const entrydata = await response.json();\r\n        for(let i = 0 ; i < entrydata.length; i++){\r\n            new Promise(resolve => {\r\n                {resolve();\r\n                    setState(prevState => {\r\n                        const data = [...prevState.data];\r\n                        data.push({id:entrydata[i].id,status:entrydata[i].status,category:entrydata[i].category,catdesc:entrydata[i].catdesc,title:entrydata[i].title,desc:entrydata[i].description.slice(0,50),user:entrydata[i].user,date:entrydata[i].timestamp,solution:entrydata[i].solution});\r\n                        return { ...prevState, data };\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getEntries();\r\n\r\n    },[]);\r\n        return(\r\n\r\n            <MaterialTable\r\n                title=\"Entries\"\r\n                columns={state.columns}\r\n                data={state.data}\r\n                icons={tableIcons}\r\n                detailPanel={[\r\n                    {\r\n                        tooltip: 'Show full description',\r\n                        render: rowData => {\r\n                            return (\r\n                                <div\r\n                                    style={{\r\n                                        fontSize: 15,\r\n                                        display:'block',\r\n                                        textAlign:'center',\r\n                                    }}\r\n                                >\r\n                                   {'Description: '}\r\n                                   {rowData.desc}\r\n                                </div>\r\n                            )\r\n                        },\r\n                    }]}\r\n                editable={{\r\n                    onRowAdd: newData =>\r\n                        new Promise(resolve => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                setState(async prevState => {\r\n\r\n                                    const data = [...prevState.data];\r\n                                    try{\r\n                                    if(newData.status != \"open\" && newData.status != \"closed\") {\r\n                                        newData.status = \"open\"\r\n                                    }\r\n                                    if(newData.solution == null){\r\n                                        newData.solution = \"\";\r\n                                    }\r\n                                    if(newData.status == \"open\" && newData.solution != \"\"){\r\n                                        newData.solution = \"\";\r\n                                        alert(\"Warning: You can only provide a solution to a closed entry. The solution gets deleted. The entry is added.\");\r\n                                    }\r\n                                    if(newData.solution == null){\r\n                                        newData.solution = \"\";\r\n                                    }\r\n                                    if(newData.timestamp != null){\r\n                                        alert(\"Timestamp not valid\");\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    if(newData.user == null){\r\n                                        alert(\"Assign this entry to an user!\");\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    if(newData.status == \"closed\" && newData.solution == null){\r\n                                        alert(\"Error: You wanted to close this entry but did not provide any solution\");\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    if(newData.title == null || newData.desc == null){\r\n                                        alert(\"Please give this entry a title and a description\");\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    if(newData.id != null){\r\n                                        alert(\"Error: Invalid ID\");\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    if(newData.category != \"product\" && newData.category != \"process\"){\r\n                                        alert(\"Please assign this entry a category\");\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    if(newData.catdesc == null){\r\n                                            alert(\"Please enter a Category Description (e.g. Office 2016)\");\r\n                                            return { ...prevState, data };\r\n                                    }\r\n                                    const url = pathStart + \":8080/errorkb/api/PostNewEntry/?tit=\"+newData.title+\"&desc=\"+newData.desc+\"&stat=\"+newData.status+\"&username=\"+newData.user+\"&solution=\"+newData.solution+\"&category=\"+newData.category+\"&catdesc=\"+newData.catdesc;\r\n\r\n                                        const response = await request('POST',url);\r\n                                        if(response.status==200){\r\n                                            data.push(newData);\r\n                                            return { ...prevState, data };\r\n                                        }\r\n                                    }\r\n                                    catch(error){\r\n                                        alert(error.message)\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    finally{\r\n                                        window.location.reload();\r\n                                    }\r\n                                })\r\n                            }, 600);\r\n                        }),\r\n                    onRowUpdate:\r\n                        (newData, oldData) =>\r\n                            new Promise(resolve => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    if (oldData) {\r\n                                        console.log(oldData.username);\r\n                                        console.log(newData);\r\n                                        setState(async prevState => {\r\n                                            const data = [...prevState.data];\r\n                                            try{\r\n\r\n                                                if(newData.status != \"open\" && newData.status != \"closed\") {\r\n                                                    newData.status = \"open\"\r\n                                                }\r\n                                                if(newData.solution==null){\r\n                                                    newData.solution = \"\";\r\n                                                }\r\n                                                if(newData.status == \"open\" && newData.solution != \"\"){\r\n                                                    newData.solution = \"\";\r\n                                                    alert(\"Warning: You can only provide a solution to a closed entry. The solution gets deleted. The entry is added.\");\r\n                                                }\r\n                                                if(newData.timestamp != null){\r\n                                                    alert(\"Timestamp not valid\");\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                                if(newData.user == null){\r\n                                                    alert(\"Assign this entry to an user!\");\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                                if(newData.status == \"closed\" && newData.solution == null){\r\n                                                    alert(\"Error: You wanted to close this entry but did not provide any solution\");\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                                if(newData.title == null || newData.desc == null){\r\n                                                    alert(\"Please give this entry a title and a description\");\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                                if(newData.id != oldData.id){\r\n                                                    alert(\"Error: Invalid ID\");\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                                if(newData.category != \"product\" && newData.category != \"process\"){\r\n                                                    alert(\"Please assign this entry a category\");\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                                if(newData.catdesc == null){\r\n                                                    alert(\"Please enter a Category Description (e.g. Office 2016)\");\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                            const url = pathStart + \":8080/errorkb/api/PutNewEntry/?id=\"+ oldData.id+\"&tit=\"+newData.title+\"&desc=\"+newData.desc+\"&stat=\"+newData.status+\"&username=\"+newData.user+\"&solution=\"+newData.solution+\"&category=\"+newData.category+\"&catdesc=\"+newData.catdesc;\r\n\r\n                                                const response = await request('PUT',url);\r\n                                                if(response.status==200){\r\n                                                    data[data.indexOf(oldData)] = newData;\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                            }\r\n                                            catch(error){\r\n                                                alert(error.message)\r\n                                                return { ...prevState, data };\r\n                                            }\r\n                                            finally{\r\n                                                window.location.reload();\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                }, 600);\r\n                            }),\r\n                    onRowDelete: oldData =>\r\n                        new Promise(resolve => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                setState(async prevState => {\r\n                                    const data = [...prevState.data];\r\n                                    const url = pathStart + \":8080/errorkb/Api/DeleteEntry?id=\"+oldData.id;\r\n                                    try{\r\n                                        if(cookies.rights == \"admin\"){\r\n                                            const response = await request('DELETE',url);\r\n                                            if(response.status==200){\r\n                                                data.splice(data.indexOf(oldData), 1);\r\n                                                return { ...prevState, data };\r\n                                            }\r\n                                        }\r\n                                        else{\r\n                                            alert(\"Insufficient permissions\");\r\n                                            return { ...prevState, data };\r\n                                        }\r\n\r\n                                    }\r\n                                    catch(error){\r\n                                        alert(error.message)\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    finally{\r\n                                        window.location.reload();\r\n                                    }\r\n                                });\r\n                            }, 600);\r\n                        }),\r\n                }}\r\n            />\r\n\r\n\r\n\r\n        );\r\n\r\n}\r\n\r\n","import React, {Component, useEffect} from 'react';\r\nimport '../App.css';\r\nimport {useCookies} from \"react-cookie\";\r\nimport { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nexport default function UserMgmt() {\r\n    var request = require('superagent');\r\n    const [cookies, setCookie, removeCookie] = useCookies(['user']);\r\n    const pathStart = window.location.protocol + \"//\" + window.location.host;\r\n    const [isAdm,setAdm] = React.useState(false);\r\n    const [isLoggedIn,setLoggedIn] = React.useState(false);\r\n\r\n    const [state, setState] = React.useState({\r\n        columns: [\r\n            { title: 'Username', field: 'username' },\r\n            { title: 'Password', field: 'password'},\r\n            { title: 'Privileges', field: 'priv', lookup:{admin:'admin',user:'user'} },\r\n        ],\r\n        data: [\r\n\r\n        ],\r\n    });\r\n\r\n    const getUsers = async() => {\r\n\r\n        const url = pathStart + \":8080/errorkb/api/GetAllUsers\";\r\n        const response = await fetch(url);\r\n        const userdata = await response.json();\r\n        for(let i = 0 ; i < userdata.length; i++){\r\n            new Promise(resolve => {\r\n                {resolve();\r\n                    setState(prevState => {\r\n                        const data = [...prevState.data];\r\n                        data.push({username:userdata[i].username,password:\"********\",priv:userdata[i].privileges});\r\n                        return { ...prevState, data };\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const readCookieUser = () => {\r\n        const user = cookies.user\r\n        if (user != null) {\r\n            setLoggedIn(true);\r\n        }\r\n        else{\r\n            setLoggedIn(false);\r\n            window.location=\"/\";\r\n        }\r\n    }\r\n    const readCookieRights=()=>{\r\n        const rights = cookies.rights\r\n        if (rights == 'admin') {\r\n        }\r\n        else{\r\n            window.location=\"/\";\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getUsers();\r\n        readCookieUser();\r\n        readCookieRights();\r\n    },[]);\r\n    return (\r\n\r\n        <MaterialTable\r\n            title=\"User Management\"\r\n            columns={state.columns}\r\n            data={state.data}\r\n            icons={tableIcons}\r\n            editable={{\r\n                onRowAdd: newData =>\r\n                    new Promise(resolve => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState(async prevState => {\r\n                                const data = [...prevState.data];\r\n\r\n                                try{\r\n                                    if(newData.password == null){\r\n                                        alert(\"Please assign a password\")\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    if(newData.username == null){\r\n                                        alert(\"Please assign a username\")\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                    const url = pathStart + \":8080/errorkb/api/PostNewUser/?username=\"+newData.username+\"&password=\"+newData.password+\"&priv=\"+newData.priv;\r\n                                    const response = await request('POST',url);\r\n                                    if(response.statusCode==200){\r\n                                        data.push(newData);\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                }\r\n                                catch(error){\r\n                                    alert(error.message)\r\n                                    return { ...prevState, data };\r\n                                }\r\n                                finally{\r\n                                    window.location.reload();\r\n                                }\r\n                            })\r\n                        }, 600);\r\n                    }),\r\n                onRowUpdate:\r\n                    (newData, oldData) =>\r\n                            new Promise(resolve => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    if (oldData) {\r\n                                        console.log(oldData.username);\r\n                                        console.log(newData);\r\n                                        setState(async prevState => {\r\n                                            const data = [...prevState.data];\r\n\r\n                                            try{\r\n                                                if(newData.password == null){\r\n                                                    alert(\"Please assign a password\")\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                                if(newData.username == null){\r\n                                                    alert(\"Please assign a username\")\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                                if(newData.priv != \"admin\" && newData.priv != \"user\"){\r\n                                                    alert(\"Please assign valid privileges\")\r\n                                                    return { ...prevState, data };\r\n                                                }\r\n                                                if(newData.password == oldData.password){\r\n                                                    const url = pathStart + \":8080/errorkb/api/PutNewUser/?oldUsername=\"+ oldData.username+\"&newUsername=\"+newData.username+\"&newPriv=\"+newData.priv;\r\n                                                    const response = await request('PUT',url);\r\n                                                    if(response.statusCode==200){\r\n                                                        data[data.indexOf(oldData)] = newData;\r\n                                                        return { ...prevState, data };\r\n                                                    }\r\n                                                }\r\n                                                if(newData.password != oldData.password){\r\n                                                    const url = pathStart + \":8080/errorkb/api/PutNewUser/?oldUsername=\"+ oldData.username+\"&newUsername=\"+newData.username+\"&newPassword=\"+newData.password+\"&newPriv=\"+newData.priv;\r\n                                                    const response = await request('PUT',url);\r\n                                                    if(response.statusCode==200){\r\n                                                        data[data.indexOf(oldData)] = newData;\r\n                                                        return { ...prevState, data };\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            catch(error){\r\n                                                alert(error.message)\r\n                                                return { ...prevState, data };\r\n                                            }\r\n                                            finally{\r\n                                                window.location.reload();\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                }, 600);\r\n                    }),\r\n                onRowDelete: oldData =>\r\n                    new Promise(resolve => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState(async prevState => {\r\n                                const data = [...prevState.data];\r\n                                const url = pathStart + \":8080/errorkb/Api/DeleteUser?username=\"+oldData.username;\r\n                                try{\r\n                                    const response = await request('DELETE',url);\r\n                                    if(response.statusCode==200){\r\n                                        data.splice(data.indexOf(oldData), 1);\r\n                                        return { ...prevState, data };\r\n                                    }\r\n                                }\r\n                                catch(error){\r\n                                    alert(error.message)\r\n                                    return { ...prevState, data };\r\n                                }\r\n                                finally{\r\n                                    window.location.reload();\r\n                                }\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\n\r\n","import React,{Component,useState,useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {fade, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {ListItemSecondaryAction} from \"@material-ui/core\";\r\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect} from \"react-router-dom\";\r\nimport { useCookies,Cookies } from 'react-cookie';\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport App from \"../App\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n\r\n    a:{\r\n      textDecoration:'none',\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: 200,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [cookies, setCookie, removeCookie] = useCookies(['user']);\r\n    const [isAdm,setAdm] = React.useState(false);\r\n    const [isLoggedIn,setLoggedIn] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOnClickDashboard = () => {\r\n        window.location = '/Dashboard/';\r\n    }\r\n\r\n    const handleOnClickLogout = () => {\r\n        removeCookie(\"user\");\r\n        removeCookie(\"rights\");\r\n        window.location = '/';\r\n    }\r\n    const handleOnClickUserMgmt = () => {\r\n        window.location = '/UserMgmt';\r\n    }\r\n\r\n\r\n    const readCookieRights = () => {\r\n        const rights = cookies.rights\r\n        if (rights == \"admin\") {\r\n            setAdm(true);\r\n        }\r\n        else{\r\n            setAdm(false);\r\n        }\r\n    }\r\n    const readCookieUser = () => {\r\n        const user = cookies.user\r\n        if (user != null) {\r\n            setLoggedIn(true);\r\n        }\r\n        else{\r\n            setLoggedIn(false);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        readCookieRights();\r\n        readCookieUser();\r\n\r\n    })\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>{\r\n                    isLoggedIn\r\n\r\n                        ?\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>:<p/>}\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Error-KB\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <ListItem button key={\"Dashboard\"} onClick={handleOnClickDashboard} >\r\n                    <ListItemIcon>{<HomeIcon />}</ListItemIcon>\r\n                    <ListItemText primary={'Dashboard'} />\r\n                </ListItem>\r\n                <Divider />\r\n                {isAdm?\r\n                     <ListItem button key={\"User management\"} onClick={handleOnClickUserMgmt} >\r\n                                <ListItemIcon>{<AccountBoxIcon />}</ListItemIcon>\r\n                                <ListItemText primary={'User management'} />\r\n                     </ListItem>:<div></div>}\r\n                <List>\r\n                        <ListItem button key={\"Logout\"} onClick={handleOnClickLogout}>\r\n                            <ListItemIcon>{<ExitToAppIcon />}</ListItemIcon>\r\n                            <ListItemText primary={'Logout'} />\r\n                        </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n            </main>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport Login from './components/auth/login.jsx';\nimport Dashboard from \"./components/Dashboard\";\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect} from \"react-router-dom\";\nimport AuthApi from \"./components/auth/AuthApi\";\nimport { useCookies } from 'react-cookie';\nimport UserMgmt from \"./components/UserMgmt\";\nimport AppBar from \"./components/AppBar\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\n\n\nexport default function App(){\n    const [auth,setAuth] = React.useState(false);\n    const [cookies, setCookie, removeCookie] = useCookies(['user']);\n\n    const readCookie = () => {\n    const user = cookies.user\n        if (user) {\n            setAuth(true);\n        }\n    };\n\n    React.useEffect(()=>    {\n        readCookie();\n    },[]);\n\n    return (\n        <div>\n            <MuiThemeProvider>\n                <AppBar />\n            </MuiThemeProvider>\n            <AuthApi.Provider value={{auth,setAuth}}>\n                    <Router>\n                      <Routes/>\n                    </Router>\n            </AuthApi.Provider>\n        </div>\n    )\n}\n\n\n\nconst Routes = () => {\n    const Auth = React.useContext(AuthApi);\n  return(\n      <Switch>\n          <ProtectedLogin path={\"/\"} exact auth={Auth.auth} component={Login}/>\n          <ProtectedRoute path={\"/Dashboard\"} exact auth={Auth.auth} component={Dashboard}/>\n          <Route path={\"/UserMgmt\"} auth={Auth.auth} exact component={UserMgmt}/>\n      </Switch>\n  )\n};\n\nconst ProtectedRoute = ({auth,component:Component,...rest}) => {\n    return(\n        <Route\n            {...rest}\n            render = {()=>auth?(\n                <Component/>\n            ):\n                (\n                    <Redirect to={'/'}/>\n                )\n            }/>\n    )\n};\nconst ProtectedLogin = ({auth,component:Component,...rest}) => {\n    return(\n        <Route\n            {...rest}\n            render = {()=>!auth?(\n                    <Component/>\n                ):\n                (\n                    <Redirect to={'/Dashboard'}/>\n                )\n            }/>\n    )\n};\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}